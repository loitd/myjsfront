{"version":3,"sources":["screens/NotFoundScreen.tsx","constants/Colors.ts","components/Themed.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/TabOneScreen.tsx","screens/TabTwoScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","screens/HomeScreen.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","hooks/useColorScheme.web.ts","assets/fonts/OpenSans-Regular.ttf","assets/fonts/OpenSans-Italic.ttf","assets/fonts/OpenSans-Bold.ttf","assets/images/map.png","assets/images/map2.png","assets/images/map3.png","assets/images/map4.png","assets/images/map5.png","assets/images/bg.jpg"],"names":["NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","MonoText","fontFamily","EditScreenInfo","path","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","WebBrowser","developmentModeText","marginBottom","lineHeight","textAlign","contentContainer","paddingTop","welcomeContainer","welcomeImage","width","height","resizeMode","marginLeft","marginHorizontal","marginVertical","codeHighlightText","borderRadius","paddingHorizontal","TabOneScreen","separator","TabTwoScreen","BottomTab","createBottomTabNavigator","BottomTabNavigator","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","name","component","TabOneNavigator","options","tabBarIcon","TabBarIcon","TabTwoNavigator","Ionicons","size","TabOneStack","createStackNavigator","headerTitle","toggleDrawer","headerStyle","headerTintColor","headerTitleStyle","headerBackTitle","TabTwoStack","prefixes","Linking","config","screens","Root","TabOne","TabTwo","Home","HomeScreen","NotFound","fakedata","id","description","imgurl","require","Item","Image","source","borderWidth","borderColor","navigate","React","focus","setFocus","txStyle","textinputfocus","textinput","ScrollView","ImageBackground","flexDirection","h1","marginRight","paddingLeft","TextInput","placeholder","placeholderTextColor","onFocus","onBlur","SafeAreaView","horizontal","showsHorizontalScrollIndicator","slidingItemView","h2","FlatList","data","renderItem","item","keyExtractor","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createDrawerNavigator","screenOptions","headerShown","App","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","console","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.bcd5dccc.chunk.js","sourcesContent":["import { StackScreenProps } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nimport { RootStackParamList } from '../types';\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('Home')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n","import * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Text, TextProps } from './Themed';\r\n\r\nexport function MonoText(props: TextProps) {\r\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport React from 'react';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport { MonoText } from './StyledText';\r\nimport { Text, View } from './Themed';\r\n\r\nexport default function EditScreenInfo({ path }: { path: string }) {\r\n  return (\r\n    <View>\r\n      <View style={styles.getStartedContainer}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Open up the code for this screen:\r\n        </Text>\r\n\r\n        <View\r\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\r\n          darkColor=\"rgba(255,255,255,0.05)\"\r\n          lightColor=\"rgba(0,0,0,0.05)\">\r\n          <MonoText>{path}</MonoText>\r\n        </View>\r\n\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Change any of the text, save the file, and your app will automatically update.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.helpContainer}>\r\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n            Tap here if your app doesn't automatically update after making changes\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction handleHelpPress() {\r\n  WebBrowser.openBrowserAsync(\r\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  developmentModeText: {\r\n    marginBottom: 20,\r\n    fontSize: 14,\r\n    lineHeight: 19,\r\n    textAlign: 'center',\r\n  },\r\n  contentContainer: {\r\n    paddingTop: 30,\r\n  },\r\n  welcomeContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  welcomeImage: {\r\n    width: 100,\r\n    height: 80,\r\n    resizeMode: 'contain',\r\n    marginTop: 3,\r\n    marginLeft: -10,\r\n  },\r\n  getStartedContainer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 50,\r\n  },\r\n  homeScreenFilename: {\r\n    marginVertical: 7,\r\n  },\r\n  codeHighlightText: {\r\n    color: 'rgba(96,100,109, 0.8)',\r\n  },\r\n  codeHighlightContainer: {\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4,\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    lineHeight: 24,\r\n    textAlign: 'center',\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15,\r\n  },\r\n  helpLinkText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function TabOneScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Tab One One One</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditScreenInfo path=\"/screens/TabOneScreen.tsx\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function TabTwoScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Tab Two</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { Text, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport TabOneScreen from '../screens/TabOneScreen';\r\nimport TabTwoScreen from '../screens/TabTwoScreen';\r\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\r\n\r\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\r\n\r\nexport default function BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"TabOne\"\r\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\r\n      <BottomTab.Screen\r\n        name=\"TabOne\"\r\n        component={TabOneNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"albums-outline\" color={color} />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabTwo\"\r\n        component={TabTwoNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"apps\" color={color} />,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n// You can explore the built-in icon families and icons on the web at:\r\n// https://icons.expo.fyi/\r\nfunction TabBarIcon(props: { name: string; color: string }) {\r\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n\r\n// Each tab has its own navigation stack, you can read more about this pattern here:\r\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\r\nconst TabOneStack = createStackNavigator<TabOneParamList>();\r\n\r\nfunction TabOneNavigator({navigation}) {\r\n  return (\r\n    <TabOneStack.Navigator>\r\n      <TabOneStack.Screen\r\n        name=\"TabOneScreen\"\r\n        component={TabOneScreen}\r\n        options={{ \r\n          headerTitle: ({color}) => (\r\n            <TouchableOpacity onPress = {()=> navigation.toggleDrawer()}>\r\n              <TabBarIcon name=\"apps\" color={color}/>\r\n            </TouchableOpacity>\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: \"#45ff45\",\r\n          },\r\n          headerTintColor: \"#f1f\",\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n          // headerRight: () => (),\r\n          headerBackTitle: \"BACK NOW\",\r\n        }}\r\n      />\r\n    </TabOneStack.Navigator>\r\n  );\r\n}\r\n\r\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\r\n\r\nfunction TabTwoNavigator() {\r\n  return (\r\n    <TabTwoStack.Navigator>\r\n      <TabTwoStack.Screen\r\n        name=\"TabTwoScreen\"\r\n        component={TabTwoScreen}\r\n        options={{ headerTitle: 'Tab Two Title' }}\r\n      />\r\n    </TabTwoStack.Navigator>\r\n  );\r\n}\r\n","import * as Linking from 'expo-linking';\r\n\r\nexport default {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        screens: {\r\n          TabOne: {\r\n            screens: {\r\n              TabOneScreen: 'one',\r\n            },\r\n          },\r\n          TabTwo: {\r\n            screens: {\r\n              TabTwoScreen: 'two',\r\n            },\r\n          },\r\n        },\r\n      },\r\n      Home: {\r\n        screens: {\r\n          HomeScreen: 'home'\r\n        }\r\n      },\r\n      NotFound: '*',\r\n    },\r\n  },\r\n};\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as React from 'react';\r\nimport { StyleSheet, ImageBackground, TouchableOpacity, View, Text, TextInput, ScrollView, SafeAreaView, FlatList, Image } from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\n// import { Text, View } from '../components/Themed';\r\n\r\n// <span>Photo by <a href=\"https://unsplash.com/@jenrielzany?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Zany Jadraque</a> on <a href=\"https://unsplash.com/s/photos/gaming?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\r\n\r\nconst fakedata = [\r\n    {\r\n        id: 1,\r\n        title: \"Travelling to Dalat\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. \",\r\n        imgurl: require(\"../assets/images/map.png\")\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Travelling to Las Vegas\",\r\n        description: \"Vegas ipsum dolor sit amet, consectetur adipisicing elit.\",\r\n        imgurl: require(\"../assets/images/map2.png\")\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Travelling to Kuala Lumpua\",\r\n        description: \"Kuala Lumpua ipsum dolor sit amet, consectetur adipisicing elit.\",\r\n        imgurl: require(\"../assets/images/map3.png\")\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Travelling to Moscow\",\r\n        description: \"Moscow ipsum dolor sit amet, consectetur adipisicing elit.\",\r\n        imgurl: require(\"../assets/images/map4.png\")\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Coding this screen\",\r\n        description: \"Bombay ipsum dolor sit amet, consectetur adipisicing elit.\",\r\n        imgurl: require(\"../assets/images/map5.png\")\r\n    },\r\n\r\n]\r\n\r\nconst Item = ({title, description, imgurl}) => (\r\n    <View>\r\n    <Image source={imgurl} style={{\r\n            width:128, \r\n            height:128,\r\n            borderRadius: 10,\r\n            borderWidth: 1,\r\n            borderColor: \"lightgray\",\r\n            marginBottom: 15\r\n        }} />\r\n    <Text style={{fontSize: 14, color:\"black\", fontFamily:\"open-sans-bold\"}}>{title}</Text>\r\n    <Text style={{color:\"black\", fontSize:12, fontFamily:\"open-sans-italic\"}}>{description}</Text>\r\n    </View>\r\n);\r\n\r\nexport default function HomeScreen({navigation:{navigate}}) {\r\n  \r\n    const [focus, setFocus] = React.useState(false);\r\n    const txStyle = focus ? styles.textinputfocus : styles.textinput;\r\n\r\n    const renderItem = ({item}) => (\r\n        <TouchableOpacity style={{ \r\n            alignItems: \"center\", \r\n            // justifyContent: \"center\", \r\n            width: 140, \r\n            marginHorizontal: 10,\r\n            backgroundColor: \"white\",\r\n            borderRadius: 10,\r\n            padding: 5\r\n        }} onPress={()=>navigate('NotFound')} >\r\n            <Item title={item.title} description={item.description} imgurl={item.imgurl} />\r\n        </TouchableOpacity>\r\n    );\r\n\r\n  return (\r\n    <ScrollView>\r\n    <ImageBackground \r\n        source={require('../assets/images/bg.jpg')}\r\n        style={{\r\n            flex: 1, \r\n            flexDirection: \"column\", \r\n            resizeMode: \"cover\", \r\n            paddingHorizontal: 15, \r\n            paddingTop: 40,\r\n        }}\r\n    >\r\n        <View style={{ \r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: null\r\n        }}>\r\n            <TouchableOpacity style={{width: \"50%\", backgroundColor: null}}>\r\n                <Ionicons name=\"basketball-outline\" color=\"white\" size={30} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={{width:\"50%\", alignItems:\"flex-end\", backgroundColor: null}}>\r\n                <Ionicons name=\"person-circle-outline\" color=\"white\" size={30} />\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={{marginTop:15}}>\r\n            <Text style={styles.h1}>Hello, Tran</Text>\r\n        </View>\r\n\r\n        <View style={{ \r\n            flexDirection:\"row\", \r\n            marginTop:15, \r\n            // backgroundColor: \"red\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <Ionicons name=\"search-outline\" color=\"white\" size={20} style={{\r\n                // backgroundColor: \"black\",\r\n                width: 30,\r\n                marginRight: -30,\r\n                paddingLeft: 10,\r\n            }}/>\r\n            <TextInput \r\n                style={txStyle} \r\n                placeholder=\"Type something to search\" \r\n                placeholderTextColor=\"lightgray\"\r\n                onFocus={()=>setFocus(true)}\r\n                onBlur={()=>setFocus(false)}\r\n            />\r\n        </View>\r\n        \r\n        <SafeAreaView style={{}}>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{\r\n            marginTop: 30,\r\n            // paddingHorizontal: 20,\r\n            // height: 60,\r\n            // backgroundColor: \"yellow\",\r\n        }}>\r\n            <View style={[{backgroundColor: \"red\"}, styles.slidingItemView]}>\r\n                <TouchableOpacity>\r\n                    <Ionicons name=\"airplane-outline\" color=\"white\" size={30} style={{}} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            \r\n            <View style={[{backgroundColor: \"purple\"}, styles.slidingItemView]}>\r\n                <TouchableOpacity>\r\n                    <Ionicons name=\"analytics-outline\" color=\"white\" size={30} style={{}} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            \r\n            <View style={[{backgroundColor: \"orange\"}, styles.slidingItemView]}>\r\n                <TouchableOpacity>\r\n                    <Ionicons name=\"barcode-outline\" color=\"white\" size={30} style={{}} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            \r\n            <View style={[{backgroundColor: \"blue\"}, styles.slidingItemView]}>\r\n                <TouchableOpacity>\r\n                <Ionicons name=\"bicycle-outline\" color=\"white\" size={30} style={{}} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            \r\n            <View style={[{backgroundColor: \"green\"}, styles.slidingItemView]}>\r\n                <TouchableOpacity>\r\n                <Ionicons name=\"book-outline\" color=\"white\" size={30} style={{}} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n        </SafeAreaView>\r\n\r\n        <View style={{marginTop:15}}>\r\n            <Text style={styles.h2}>Recommended</Text>\r\n            <Text style={{fontSize:13, color:\"lightgray\", fontFamily:\"open-sans\", backgroundColor:null}}>\r\n                Lorem, ipsum dolor sit amet consectetur adipisicing elit. \r\n            </Text>\r\n        </View>\r\n\r\n        <SafeAreaView style={{\r\n            // backgroundColor: \"white\",\r\n            marginTop: 15\r\n        }}>\r\n            <FlatList \r\n                horizontal\r\n                data = {fakedata}\r\n                renderItem = {renderItem}\r\n                keyExtractor = {item=>item.id}\r\n            />\r\n        </SafeAreaView>\r\n\r\n        {/* MUSIC PLAYER */}\r\n        <SafeAreaView style={{\r\n            backgroundColor:\"white\",\r\n            flexDirection: \"row\",\r\n            // flex: 1,\r\n            height: 80,\r\n            borderRadius: 10,\r\n            marginVertical: 15,\r\n            padding: 15\r\n        }}>\r\n            <View style={{\r\n                alignItems: \"flex-start\", //align is for horizontal (if colum)\r\n                justifyContent: \"center\", //justify is for vertical (if colum)\r\n                flex: 0.5,\r\n                flexDirection: \"column\",\r\n                // backgroundColor: \"purple\"\r\n            }}>\r\n                <Text style={[styles.h2, {color: \"purple\", }]}>Queen</Text>\r\n                <Text style={{\r\n                    color: \"gray\",\r\n                    fontSize: 16,\r\n                }}>You wanna rock</Text>\r\n            </View>\r\n\r\n            <View style={{ \r\n                // backgroundColor: \"red\",\r\n                alignItems: \"center\", //align is for vertial (if row)\r\n                justifyContent: \"flex-end\", //justify is for horizontal (if row)\r\n                flexDirection: \"row\",\r\n                flex: 0.5,\r\n            }}>\r\n                <TouchableOpacity style={{marginHorizontal: 3}}>\r\n                    <Ionicons name=\"play-outline\" size={24} color=\"#2d2d2d\" style={{}}></Ionicons>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{marginHorizontal: 3}}>\r\n                    <Ionicons name=\"pause\" size={24} color=\"#2d2d2d\"></Ionicons>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{marginHorizontal: 3}}>\r\n                    <Ionicons name=\"heart-outline\" size={24} color=\"#2d2d2d\"></Ionicons>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{marginHorizontal: 3}}>\r\n                    <Ionicons name=\"repeat-sharp\" size={24} color=\"#2d2d2d\"></Ionicons>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </SafeAreaView>\r\n        {/* END OF MUSIC PLAYER */}\r\n\r\n    </ImageBackground>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  h1: {\r\n      fontSize:20, \r\n      color:\"white\", \r\n      fontFamily:\"open-sans-bold\", \r\n      backgroundColor:null\r\n  },\r\n  h2: {\r\n    fontSize:16, \r\n    color:\"white\", \r\n    fontFamily:\"open-sans-bold\", \r\n    backgroundColor:null\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n  textinput: {\r\n    width: \"100%\",\r\n    height:40,\r\n    borderColor:\"lightgray\", \r\n    borderWidth:1,\r\n    // marginLeft: 30,\r\n    paddingLeft:40,\r\n    borderRadius:20,\r\n    // backgroundColor:\"yellow\"\r\n  },\r\n  textinputfocus: {\r\n    width: \"100%\",\r\n    height:40,\r\n    borderColor:\"white\", \r\n    borderWidth:1,\r\n    // marginLeft: -35,\r\n    paddingLeft:40,\r\n    borderRadius:20,\r\n    color: \"white\",\r\n  },\r\n  slidingItemView: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 60,\r\n    marginRight: 20,\r\n  }\r\n});\r\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport { RootStackParamList } from '../types';\r\nimport BottomTabNavigator from './BottomTabNavigator';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport HomeScreen from '../screens/HomeScreen';\r\n\r\n// If you are not familiar with React Navigation, we recommend going through the\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n      {/* <RootDrawerNavigator /> */}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootStackParamList>();\r\nconst Draw = createDrawerNavigator();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction RootDrawerNavigator(){\r\n  return(\r\n    <Draw.Navigator initialRouteName=\"Home\">\r\n      <Draw.Screen name=\"NotFound\" component={NotFoundScreen} />\r\n      <Draw.Screen name=\"Home\" component={HomeScreen} /> \r\n    </Draw.Navigator>\r\n  );\r\n}\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\nimport useCachedResources from './hooks/useCachedResources';\r\nimport useColorScheme from './hooks/useColorScheme';\r\nimport Navigation from './navigation';\r\n\r\n//SafeAreaProvider the root element of the screen. This helps us to avoid drawing UI over the notches on physical devices\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n          <Navigation colorScheme={colorScheme} />\r\n          <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'open-sans': require('../assets/fonts/OpenSans-Regular.ttf'),\r\n          'open-sans-italic': require('../assets/fonts/OpenSans-Italic.ttf'),\r\n          'open-sans-bold': require('../assets/fonts/OpenSans-Bold.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","// useColorScheme from react-native does not support web currently. You can replace\r\n// this with react-native-appearance if you would like theme support on web.\r\nexport default function useColorScheme() {\r\n  return 'light';\r\n}","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Italic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";","module.exports = __webpack_public_path__ + \"static/media/map.06e6f5bb.png\";","module.exports = __webpack_public_path__ + \"static/media/map2.f01f1278.png\";","module.exports = __webpack_public_path__ + \"static/media/map3.416aa144.png\";","module.exports = __webpack_public_path__ + \"static/media/map4.100c9157.png\";","module.exports = __webpack_public_path__ + \"static/media/map5.d56e96fe.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.d40e0652.jpg\";"],"sourceRoot":""}